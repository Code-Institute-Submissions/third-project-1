{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":6,"column":21},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","import pymongo","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","app = Flask(__name__)"],"id":1}],[{"start":{"row":6,"column":21},"end":{"row":11,"column":0},"action":"insert","lines":[" ","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)",""],"id":2}],[{"start":{"row":6,"column":22},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":6,"column":22},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":7,"column":0},"end":{"row":20,"column":40},"action":"insert","lines":["","app.config[\"MONGO_DBNAME\"] = 'myDatabase'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI')","conn = pymongo.MongoClient(app.config[\"MONGO_URI\"])","DATABASE_NAME = \"myDatabase\"","COLLECTION_NAME = \"products\"","COLLECTION_NAME2 = \"types\"","COLLECTION_NAME3 = \"purpose\"","COLLECTION_NAME4 = \"origin\"","mongo = PyMongo(app)","","@app.route('/')","def index():","    return render_template('index.html')"],"id":5}],[{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":6}],[{"start":{"row":22,"column":0},"end":{"row":53,"column":0},"action":"insert","lines":["","@app.route('/list_products')","def list_products():","    type = request.args.get('type')","    purpose = request.args.get('purpose')","    origin = request.args.get('origin')","    criteria= {} ","    ","    if type and type != 'Type':","        criteria['type'] = type","    else:","        type = 'Type'","        ","    if purpose and purpose != 'Purpose':","        criteria['purpose'] = purpose","    else:","        purpose ='Purpose'","        ","    if origin and origin != 'Origin':","        criteria['origin'] = origin","    else:","        origin = 'Origin'","        ","        ","    products = conn[DATABASE_NAME][COLLECTION_NAME].find(criteria)","    print(products)","    types = conn[DATABASE_NAME][COLLECTION_NAME2].find()","    purposes = conn[DATABASE_NAME][COLLECTION_NAME3].find()","    origins = conn[DATABASE_NAME][COLLECTION_NAME4].find()","    return render_template(\"list_products.html\", ","                           products=products,type=type, purpose=purpose, origin=origin, types=types, purposes=purposes, origins=origins)",""],"id":7}],[{"start":{"row":53,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["",""],"id":8}],[{"start":{"row":54,"column":0},"end":{"row":95,"column":0},"action":"insert","lines":["","@app.route('/file/<filename>')","def file(filename):","    return mongo.send_file(filename)","","@app.route('/add_product') ","def add_product():","    types = conn[DATABASE_NAME][COLLECTION_NAME2].find()","    purposes = conn[DATABASE_NAME][COLLECTION_NAME3].find()","    origins = conn[DATABASE_NAME][COLLECTION_NAME4].find()","    ","    return render_template('add_product.html', types=types, purposes=purposes, origins=origins)","    ","@app.route('/add_product', methods=['POST'])","def insert_product():","    name = request.form.get('name')","    brand = request.form.get('brand')","    price = request.form.get('price')","    origin = request.form.get('origin')","    type = request.form.get('type')","    purpose = request.form.get('purpose')","    volume = request.form.get('volume')","    description = request.form.get('description')","    ","    if \"product_image\" in request.files:","        product_image = request.files['product_image']","        mongo.save_file(product_image.filename, product_image)","    ","    conn[DATABASE_NAME][COLLECTION_NAME].insert({","        \"name\" : name,","        \"brand\" : brand,","        \"price\" : price,","        \"origin\" : origin,","        \"type\" : type,","        \"purpose\" : purpose,","        \"volume\" : volume,","        \"description\" : description,","        \"product_image_name\" : product_image.filename","    })","    ","    return redirect(\"/\")",""],"id":9}]]},"ace":{"folds":[],"scrolltop":882,"scrollleft":0,"selection":{"start":{"row":95,"column":0},"end":{"row":95,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":66,"state":"start","mode":"ace/mode/python"}},"timestamp":1578131979903,"hash":"12ec7dc736d3fd111967428401897f9f1fffba0b"}